(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{379:function(e,t,r){"use strict";r.r(t);var v=r(25),o=Object(v.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"mvc-pattern이란"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mvc-pattern이란"}},[e._v("#")]),e._v(" MVC Pattern이란? "),r("Badge",{attrs:{text:"song"}})],1),e._v(" "),r("p",[e._v("스프링 웹 개발에 자주 사용되는 MVC 패턴의 아키텍처를 알아보겠다.")]),e._v(" "),r("h2",{attrs:{id:"mvc-architecture"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mvc-architecture"}},[e._v("#")]),e._v(" MVC Architecture")]),e._v(" "),r("p",[e._v("MVC 패턴은 "),r("code",[e._v("Model")]),e._v(" "),r("code",[e._v("View")]),e._v(" "),r("code",[e._v("Controller")]),e._v(" 를 세가지의 역할로 구분하여 개발하는 디자인패턴이다.")]),e._v(" "),r("h3",{attrs:{id:"model"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#model"}},[e._v("#")]),e._v(" Model")]),e._v(" "),r("p",[e._v("M에 해당하는 "),r("code",[e._v("Model")]),e._v(" 은 애플리케이션의 상태(date)를 나타낸다."),r("br"),e._v("\n데이터와 관련된 정보들을 정의하거나 가공하며 상태의 변화를 다른 요소에게 전달한다.")]),e._v(" "),r("ul",[r("li",[e._v('프로그램이 "무엇"을 수행할지를 정의')]),e._v(" "),r("li",[e._v("DB 관련 로직 처리")]),e._v(" "),r("li",[e._v("내부 비즈니스 로직 처리")]),e._v(" "),r("li",[e._v("데이터가 변경됨을 View와 Controller에 전달")]),e._v(" "),r("li",[r("strong",[e._v("java Beans")])])]),e._v(" "),r("blockquote",[r("p",[e._v("예시로 쇼핑몰 앱의 개발을 목표한다 가정한다면 제일 먼저 쇼핑몰의 데이터(품목, 가격, 결제수단 장바구니 등)를 정의해야한다.")])]),e._v(" "),r("h3",{attrs:{id:"view"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#view"}},[e._v("#")]),e._v(" View")]),e._v(" "),r("p",[e._v("V에 해당하는 "),r("code",[e._v("View")]),e._v(" 는 실제 사용자에게 보여지는 화면을 담당한다. UI(User Interaction)와 같은 사용자 인터페이스를 나타내며 Model의 상태를 받아 렌더링하는 역할을 수행한다.")]),e._v(" "),r("ul",[r("li",[e._v('프로그램 화면에 "보여지는" 부분을 수행')]),e._v(" "),r("li",[e._v("Model의 변화를 감지하여 업데이트함")]),e._v(" "),r("li",[e._v("Controller에게 사용자 행위를 전달")]),e._v(" "),r("li",[r("strong",[e._v("Jsp")])])]),e._v(" "),r("blockquote",[r("p",[e._v("쇼핑몰 앱의 데이터를 디스플레이 하기 위해서는 Model의 정보를 전달받아야한다.")])]),e._v(" "),r("h3",{attrs:{id:"controller"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#controller"}},[e._v("#")]),e._v(" Controller")]),e._v(" "),r("p",[e._v("C에 해당하는 "),r("code",[e._v("Controller")]),e._v(" 는 Model과 View 사이에서 매개체 역할을 한다.\n자신을 제외한 구성 요소의 데이터나 동작을 알지못하는 Model, View와 달리 Controller는 Model과 View에 관해 알고있어야 한다.")]),e._v(" "),r("ul",[r("li",[e._v('이벤트를 감지하고 "어떻게" 처리할 지를 수행')]),e._v(" "),r("li",[e._v("애플리케이션의 메인 로직 담당")]),e._v(" "),r("li",[e._v("request를 받아 Model에게 지시")]),e._v(" "),r("li",[e._v("Model과 View를 독립적으로 관리 가능")]),e._v(" "),r("li",[r("strong",[e._v("Servlet")])])]),e._v(" "),r("blockquote",[r("p",[e._v("사용자가 장바구니에 항목을 추가하거나 제거하는 행위를 할 때, Controller는 View의 입력을 받아 Model을 변경시켜주고 업데이트된 정보를 다시 View로 전송하여 업데이트된 데이터를 화면에 표시하게 한다.")])]),e._v(" "),r("br"),e._v(" "),r("h2",{attrs:{id:"mvc-structure"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mvc-structure"}},[e._v("#")]),e._v(" MVC Structure")]),e._v(" "),r("br"),e._v(" "),r("img",{attrs:{src:"https://mdn.mozillademos.org/files/16042/model-view-controller-light-blue.png",alt:"mvc 패턴 구조2",height:"400px"}}),e._v(" "),r("br"),e._v(" "),r("hr"),e._v(" "),r("p",[e._v("참고 "),r("a",{attrs:{href:"https://medium.com/@jang.wangsu/%EB%94%94%EC%9E%90%EC%9D%B8%ED%8C%A8%ED%84%B4-mvc-%ED%8C%A8%ED%84%B4%EC%9D%B4%EB%9E%80-1d74fac6e256",target:"_blank",rel:"noopener noreferrer"}},[e._v("디자인 패턴 - MVC 패턴"),r("OutboundLink")],1),r("br"),e._v("\n참고 "),r("a",{attrs:{href:"https://m.blog.naver.com/jhc9639/220967034588",target:"_blank",rel:"noopener noreferrer"}},[e._v("MVC 패턴이란"),r("OutboundLink")],1),r("br"),e._v("\n이미지 참고 "),r("a",{attrs:{href:"https://developer.mozilla.org/ko/docs/Glossary/MVC",target:"_blank",rel:"noopener noreferrer"}},[e._v("MVC"),r("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=o.exports}}]);